{{- if .Values.kong.enabled }}
---
apiVersion: {{ .Values.versions.deployment }}
kind: Deployment
metadata:
  name: kong
  labels:
    app: kong
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kong
  template:
    metadata:
      name: kong
      labels:
        app: kong
      annotations:
        # Enables redeployment if the configuration map or the declarative configuration is updated
        checksum/configmap: {{ include (print $.Template.BasePath "/configuration/kong-configmap.yaml") . | sha256sum }}
        checksum/services-configmap: {{ include (print $.Template.BasePath "/configuration/kong-services-configmap.yaml") . | sha256sum }}
    spec:
      volumes:
        - name: kong-services-config
          configMap:
            name: {{ .Values.kong.servicesConfigmap }}
      {{ if hasKey .Values.kong "nodeSelector" }}
      nodeSelector: {{ .Values.kong.nodeSelector | toYaml | nindent 8 }}
      {{ end }}
      containers:
        - name: kong
          image: {{ include "renderFullImageName" (dict "globalRegistry" .Values.global.imageRegistry "image" .Values.images.kong) }}
          imagePullPolicy: {{ .Values.deployment.imagePullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ .Values.kong.configmap }}
          ports:
            - name: proxy
              containerPort: 8000
              protocol: TCP
            - name: proxy-ssl
              containerPort: 8443
              protocol: TCP
            - name: admin
              containerPort: 8001
              protocol: TCP
            - name: admin-ssl
              containerPort: 8444
              protocol: TCP
          volumeMounts:
            - name: kong-services-config
              mountPath: /etc/kong
          resources: {{ .Values.kong.resources | toYaml | nindent 12 }}
          readinessProbe:
            exec:
              command: ["kong", "health"]
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            exec:
              command: ["kong", "health"]
            initialDelaySeconds: 5
            periodSeconds: 10
---
apiVersion: {{ .Values.versions.service }}
kind: Service
metadata:
  name: kong-proxy
spec:
  selector:
    app: kong
  ports:
    - name: kong-proxy
      port: 8000
      targetPort: 8000
      protocol: TCP
---
apiVersion: {{ .Values.versions.service }}
kind: Service
metadata:
  name: kong-proxy-ssl
spec:
  selector:
    app: kong
  ports:
    - name: kong-proxy-ssl
      port: 8443
      targetPort: 8443
      protocol: TCP
---
apiVersion: {{ .Values.versions.service }}
kind: Service
metadata:
  name: kong-admin
spec:
  selector:
    app: kong
  ports:
    - name: kong-admin
      port: 8001
      targetPort: 8001
      protocol: TCP
---
apiVersion: {{ .Values.versions.service }}
kind: Service
metadata:
  name: kong-admin-ssl
spec:
  selector:
    app: kong
  ports:
    - name: kong-admin-ssl
      port: 8444
      targetPort: 8444
      protocol: TCP
---
apiVersion: {{ .Values.versions.service }}
kind: Service
metadata:
  name: kong-admin-outside
spec:
  selector:
    app: kong
  type: NodePort
  ports:
    - name: kong-admin-outside
      nodePort: {{ .Values.kong.port.nodePort }}
      port: 8001
      protocol: TCP
      targetPort: 8001
  sessionAffinity: None
status:
  loadBalancer: {}
{{- end }}
